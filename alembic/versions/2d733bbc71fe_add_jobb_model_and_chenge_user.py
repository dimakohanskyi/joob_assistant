"""add jobb model and chenge user

Revision ID: 2d733bbc71fe
Revises: fc4721bfcced
Create Date: 2025-06-06 18:46:22.580542

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2d733bbc71fe'
down_revision: Union[str, None] = 'fc4721bfcced'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tg_user_name', sa.String(length=55), nullable=True),
    sa.Column('tg_user_id', sa.Integer(), nullable=True),
    sa.Column('user_login', sa.String(length=55), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_tg_user_id'), 'user', ['tg_user_id'], unique=True)
    op.create_index(op.f('ix_user_user_login'), 'user', ['user_login'], unique=True)
    op.create_table('profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('user_experience', sa.Float(), nullable=True),
    sa.Column('user_languages', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('user_linkedin', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('user_git_hub', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('hard_skills', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('soft_skills', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('education', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('projects', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_profile_id'), 'profile', ['id'], unique=False)
    op.drop_index(op.f('ix_User_id'), table_name='User')
    op.drop_index(op.f('ix_User_tg_user_id'), table_name='User')
    op.drop_index(op.f('ix_User_user_login'), table_name='User')
    op.drop_table('User')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('User',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tg_user_name', sa.VARCHAR(length=55), autoincrement=False, nullable=True),
    sa.Column('tg_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_login', sa.VARCHAR(length=55), autoincrement=False, nullable=True),
    sa.Column('user_experience', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('user_languages', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('user_linkedin', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('user_git_hub', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('User_pkey'))
    )
    op.create_index(op.f('ix_User_user_login'), 'User', ['user_login'], unique=True)
    op.create_index(op.f('ix_User_tg_user_id'), 'User', ['tg_user_id'], unique=True)
    op.create_index(op.f('ix_User_id'), 'User', ['id'], unique=False)
    op.drop_index(op.f('ix_profile_id'), table_name='profile')
    op.drop_table('profile')
    op.drop_index(op.f('ix_user_user_login'), table_name='user')
    op.drop_index(op.f('ix_user_tg_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
